#Server config
APP_VERSION=1.0.0
#API_MODE: production development
API_MODE=development

# JWT config
JWT_SECRET=4f075bca077b2bc668f62c25825842d9a71fb715632de72bab73a78e0c269ad6

# Logger config
#LOGGER_LEVEL: debug info warn error fatal panic
LOGGER_LEVEL=debug
#LOGGER_MODE: development production
LOGGER_MODE=development
#LOGGER_ENCODING: console json
LOGGER_ENCODING=console

# Database config
MONGODB_DATABASE=music_service
## before endcode == mongodb://mongodb_data:27017
MONGODB_ENCODED_URI=SwUt0/vYTXy1bYOS/CxixomWPoxclQcuvnbaGs1eRM7ufz1odlo3qSJQGwg7gMTqeQ7d
MONGODB_ENABLE_MONITORING=false

# Encrypt Key
ENCRYPT_KEY=98a*ahzesuf92ls0*S234fg5218gDSFs

# RABBITMQ config
RABBITMQ_URL=amqp://test:test@rabbitmq:5672/test_queue

#Redis config
# REDIS_HOST=10.10.10.126
# REDIS_DATABASE=1
# REDIS_PASSWORD=Smm@2024!
# REDIS_MIN_IDLE_CONNS=200
# REDIS_POOL_SIZE=12000
# REDIS_POOL_TIMEOUT=1



### --- setup for docker compose here 
REPO = music_service
TAG = latest
PORT = 8088
MONGO_INITDB_ROOT_USERNAME = music_svc_root
MONGO_INITDB_ROOT_PASSWORD = music_svc_root
MONGO_INITDB_DATABASE = music_service
